Q1.check whether no.is Prime number or not

#include <iostream>

using namespace std;

int main()
{
   int n,m=0,flag=0;
   cout<<"enter the number"<<endl;
   cin>>n;
   m=n/2;
   for(int i=2;i<=m;i++)
   {
        if(n%i==0)
        {
            cout<<"The no. is not prime"<<endl;
            flag=1;
            break;
        }    
   }
   
        if(flag==0)
        {
            cout<<"The no.is prime"<<endl;
        }
    
    
    return 0;
}

===========================================================================



Q2.Positive no. and negative no.

#include <iostream>

using namespace std;

int main()
{
    
    int num;
    cout<<"enter the number";
    cin>>num;
    if(num>=0){
        cout<<"the no.is positive"<<endl;
    }
    else{
        cout<<"the no. is negative"<<endl;
    }
    return 0;
}
============================================================
Q3.Factorial of the numbers.


#include <iostream>

using namespace std;

int main()
{
    int num,i,fact=1;
    cout<<"enter the number"<<endl;
    cin>>num;
    for(int i=1;i<=num;i++){
        fact=fact*i;
    }
    cout<<"the factorial of program is:"<<fact<<endl;
    
    return 0;
}
================================================================
Q.4 Fibonnacci series

#include <iostream>

using namespace std;

int main()
{
    
  int n1=0,n2=1,n3,i,number;    
 cout<<"Enter the number of elements: ";    
 cin>>number;    
 cout<<n1<<" "<<n2<<" "; //printing 0 and 1    
 for(i=2;i<number;++i) //loop starts from 2 because 0 and 1 are already printed    
 {    
  n3=n1+n2;    
  cout<<n3<<" ";    
  n1=n2;    
  n2=n3;    
 }    
  
  return 0;
    
}
==================================================================
Q.6 WAP Uppercase A to Z.


#include <iostream>

using namespace std;

int main()
{
   char ch;
   for(char ch=65;ch<=90;ch++)
   {
       cout<<ch<<" ";
   }
   
    
    return 0;
}
===================================================================
Q.7.//swapping of two nos. using temporary variable.
#include <iostream>

using namespace std;

int main()
{
   
    int temp,a=5,b=10;
    cout << "Before swapping." << endl;
    cout << "a = " << a << ", b = " << b << endl;

    temp = a;
    a = b;
    b = temp;

    cout << "\nAfter swapping." << endl;
    cout << "a = " << a << ", b = " << b << endl;

   return 0;
}
======================================================================
Q.8.
//swapping of two nos.without using temporary variable.
#include <iostream>

using namespace std;

int main()
{
   
   int i=20,j=10;
   cout<<"Before swapping the numbers are"<<i<<" "<<j<<endl;
   i=i+j;  //i=30;
   j=i-j;  //j=20
   i=i-j; //i=10
   
   cout<<"After swapping the numbers are"<<i<<" "<<j<<endl;
   
   return 0;
}
===========================================================================================================================
Q.9 //check whether alphabet is Vowel or consonant
#include <iostream>

using namespace std;

int main()
{
    
    char ch;
    cout<<"enter a character"<<endl;
    cin>>ch;
    if((ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u') || (ch=='A' || ch=='E' || ch=='I' || ch=='O' || ch=='U'))
    {
        cout<<"The alphabet is vowel";
    }
    else
    {
        cout<<"The alphabet is consonant";
    }
    
   
    
    return 0;
}

==============================================================================================================================
Q.10
//Find largest number among given number[three numbers] 
#include <iostream>

using namespace std;

int main()
{
   float n1, n2, n3;

    cout << "Enter three numbers: ";
    cin >> n1 >> n2 >> n3;

    if(n1 >= n2 && n1 >= n3)
        cout << "Largest number: " << n1;

    if(n2 >= n1 && n2 >= n3)
        cout << "Largest number: " << n2;
    
    if(n3 >= n1 && n3 >= n2)
        cout << "Largest number: " << n3;
  
    
    
    return 0;
}
==============================================================================================================================
Q.11. WAP to Reverse a Number

       
     #include <iostream>

     using namespace std;

     int main()
    {

     int n, reverse=0, rem;     
     cout<<"Enter a number: ";    
     cin>>n;    
     while(n!=0)    
    {     
     rem=n%10;      
     reverse=reverse*10+rem;    
     n=n/10;     
    }    
    cout<<"Reversed Number: "<<reverse<<endl;     
    
    return 0;
  
  }
=================================================================================================================================
Q.12. WAP to Program to Check Palindrome


#include <iostream>

using namespace std;

int main()
{
   int r,n,sum=0,temp;
    cout<<"Enter the numbers:";
    cin>>n;
    temp=n;
    while(n>0)
    {
        r=n%10;
        sum=(sum*10)+r;
        n=n/10;
    }
    if(temp==sum)
    {
       cout<<"no.is pallindrome";
    }
    else
    {
       cout<<"no.is not pallindrome";
    }

    return 0;
}
================================================================================================================================
Q.13. WAP to Program to Check Prime Number
public class PrimeExample{    
 public static void main(String args[]){    
  int i,m=0,flag=0;      
  int n=3;//it is the number to be checked    
  m=n/2;      
  if(n==0||n==1){  
   System.out.println(n+" is not prime number");      
  }else{  
   for(i=2;i<=m;i++){      
    if(n%i==0){      
     System.out.println(n+" is not prime number");      
     flag=1;      
     break;      
    }      
   }      
   if(flag==0)  { System.out.println(n+" is prime number"); }  
  }//end of else  
}    
}   




===========================================================================================
14. WAP to Display Prime Numbers Between two
Intervals
public class Prime {

    public static void main(String[] args) {

        int low = 20, high = 50;

        while (low < high) {
            boolean flag = false;

            for(int i = 2; i <= low/2; ++i) {
                // condition for nonprime number
                if(low % i == 0) {
                    flag = true;
                    break;
                }
            }

            if (!flag && low != 0 && low != 1)
                System.out.print(low + " ");

            ++low;
        }
    }
}






============================================================================================================
Q15. WAP to Check Armstrong Number for 3 digit number

#include <iostream>

using namespace std;

int main()
{
    int num, originalNum, remainder, result = 0;
    cout << "Enter a three-digit integer: ";
    cin >> num;
    originalNum = num;

    while (originalNum != 0) {
        // remainder contains the last digit
        remainder = originalNum % 10;
        
        result += remainder * remainder * remainder;
        
        // removing last digit from the orignal number
        originalNum /= 10;
    }

    if (result == num)
        cout << num << " is an Armstrong number.";
    else
        cout << num << " is not an Armstrong number.";

    return 0;
}






===================================================================================
Q.18. WAP to Prime Numbers Between Two Integers
public class Prime {

    public static void main(String[] args) {

        int low = 20, high = 50;

        while (low < high) {
            boolean flag = false;

            for(int i = 2; i <= low/2; ++i) {
                // condition for nonprime number
                if(low % i == 0) {
                    flag = true;
                    break;
                }
            }

            if (!flag && low != 0 && low != 1)
                System.out.print(low + " ");

            ++low;
        }
    }
}








============================================================================
Q.20. WAP to Convert Decimal to Octal
import java.io.*;
 
class GFG {
    // Function to convert decimal to octal
    static void decToOctal(int n)
    {
        // array to store octal number
        int[] octalNum = new int[100];
 
        // counter for octal number array
        int i = 0;
        while (n != 0) {
            // storing remainder in octal array
            octalNum[i] = n % 8;
            n = n / 8;
            i++;
        }
 
        // Printing octal number array in reverse order
        for (int j = i - 1; j >= 0; j--)
            System.out.print(octalNum[j]);
    }
 
    // Driver Code
    public static void main(String[] args)
    {
        int n = 33;
           
          // Function Call
        decToOctal(n);
    }
}
 


====================================================================================

Q21. WAP to Convert Octal to Decimal
public class Demo {
   public static void main( String args[] ) {
      // converting to decimal
      System.out.println(Integer.parseInt("25", 8));
   }
}






